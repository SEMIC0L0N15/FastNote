<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FastNote">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
        <ResourceDictionary Source="Fonts.xaml"/>
        <ResourceDictionary Source="Texts.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundVeryDarkBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{TemplateBinding Content}"                                           
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                    </Border>                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AzureLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
    </Style>

    <Style x:Key="WindowControlButton" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryLightBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="8"/>
        
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"/>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ForegroundLightBrush}"/>
            </Trigger>            
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowControlCloseButton" TargetType="{x:Type Button}" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgroundDarkRedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SystemIconButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundVeryDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundLightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="35"/>
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock Text="{TemplateBinding Content}" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BackgroundLittleLightBrush}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        
    </Style>

    <Style x:Key="IconRoundedButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="circularBorder" 
                            CornerRadius="{Binding Path=ActualHeight, ElementName=circularBorder}" 
                            Width="{Binding Path=ActualHeight, ElementName=circularBorder}">
                        <TextBlock Text="{TemplateBinding Content}" 
                                   FontFamily="{TemplateBinding FontFamily}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Center"
                                   Background="Transparent"
                                   Padding="0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform />
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource AzureLightBrush}"/>

                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1.1" Duration="0:0:0.1" Storyboard.TargetProperty="LayoutTransform.ScaleX"/>
                            <DoubleAnimation To="1.1" Duration="0:0:0.1" Storyboard.TargetProperty="LayoutTransform.ScaleY"/>
                        </Storyboard>                        
                    </BeginStoryboard>
                </Trigger.EnterActions>

                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation To="1.0" Duration="0:0:0.1" Storyboard.TargetProperty="LayoutTransform.ScaleX"/>
                            <DoubleAnimation To="1.0" Duration="0:0:0.1" Storyboard.TargetProperty="LayoutTransform.ScaleY"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                
            </Trigger>            
        </Style.Triggers>
    </Style>

    <Style x:Key="LeftToolbarButton" TargetType="{x:Type Button}" BasedOn="{StaticResource IconRoundedButton}">
        <Setter Property="BorderThickness" Value="1 0 1 1"/>
    </Style>

    <Style x:Key="TextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButton}">
        
        <Setter Property="Background" Value="{StaticResource BackgroundSuperDarkBrush}"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundLightBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                        <TextBlock Text="{TemplateBinding Content}" 
                                   Foreground="White"
                                   FontSize="{TemplateBinding FontSize}"
                                   TextWrapping="Wrap"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandTextButton" TargetType="{x:Type Button}" BasedOn="{StaticResource TextButton}">

        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundVeryLightBrush}"/>
        <Setter Property="FontSize" Value="10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="&#xf054;" 
                                       FontFamily="{StaticResource FontAwesome}"
                                       FontSize="8"
                                       Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"/>
                            <TextBlock Margin="5 0 0 0" 
                                       Text="{TemplateBinding Content}" 
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{StaticResource LatoRegular}"
                                       VerticalAlignment="Center" 
                                       HorizontalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>

    </Style>
        

</ResourceDictionary>